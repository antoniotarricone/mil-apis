openapi: 3.0.3
info:
  title: Payment Notice Microservice
  description: Payment Notice Microservice for Multi-channel Integration Layer of
    SW Client Project
  contact:
    name: Antonio Tarricone
    email: antonio.tarricone@pagopa.it
  version: 1.0.0
servers:
- url: https://mil-d-apim.azure-api.net/mil-payment-notice
  description: DEV
security:
- ApiKeyAuth: []
paths:
  /payments/{transactionId}:
    post:
      tags:
      - internal
      summary: Receive from the Nodo the result of the payment of a set of payment
        notices. This API is invoked by the Nodo for sendPaymentResult.
      operationId: receivePaymentStatus
      parameters:
      - name: transactionId
        in: path
        description: Transaction ID
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/TransactionId'
      requestBody:
        $ref: '#/components/requestBodies/PaymentStatusByNodo'
      responses:
        "200":
          description: Payment status received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: API key is missing or invalid
        "403":
          description: Forbidden
        "404":
          description: Transaction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
        "406":
          description: Not acceptable. Did you require application/json?
        "415":
          description: Unsupported media type. Did you provide application/json?
        "429":
          description: Too many request
        "500":
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
components:
  schemas:
    AllOrNothingOutcome:
      type: string
      description: Dual values (OK or KO) outcome
      example: OK
      enum:
      - OK
      - KO
    Company:
      pattern: "^[ -~]{1,140}$"
      type: string
      description: Name of the creditor company
      example: ASL Roma
    CreditorReferenceId:
      pattern: "^[ -~]{1,35}$"
      type: string
      description: ID for the creditor company
      example: 4839d50603fssfW5X
    Debtor:
      pattern: "^[ -~]{0,1024}$"
      type: string
      description: Debtor unstructured data
      example: Mario Rossi
    Description:
      pattern: "^[ -~]{1,140}$"
      type: string
      description: Payment notice description
      example: Health ticket for chest x-ray
    Office:
      pattern: "^[ -~]{1,140}$"
      type: string
      description: Name of the creditor company office
      example: Ufficio di Roma
    OkOutcome:
      type: string
      description: Constant value (OK) outcome
      example: OK
      enum:
      - OK
    PaymentToken:
      pattern: "^[ -~]{1,35}$"
      type: string
      description: ID of the payment activation
      example: 648fhg36s95jfg7DS
    TrxNotFoundOutcome:
      type: string
      description: Constant value (PAYMENT_NOT_FOUND) outcome
      example: PAYMENT_NOT_FOUND
      enum:
      - PAYMENT_NOT_FOUND
    PaymentStatusByNodo:
      required:
      - outcome
      - paymentDate
      - payments
      type: object
      properties:
        outcome:
          $ref: '#/components/schemas/AllOrNothingOutcome'
        paymentDate:
          maxLength: 19
          type: string
          description: Notification timestamp
          format: date-time
        payments:
          maxItems: 5
          type: array
          description: Details of payment notices
          items:
            $ref: '#/components/schemas/PaymentDetailsByNodo'
      additionalProperties: false
      description: Payment status communicated by the Nodo
      example:
        outcome: OK
        paymentDate: 2022-11-12T08:53:55
        payments:
        - paymentToken: 648fhg36s95jfg7DS
          description: Health ticket for chest x-ray
          creditorReferenceId: 4839d50603fssfW5X
          fiscalCode: "15376371009"
          company: ASL Roma
          office: Ufficio di Roma
          debtor: Mario Rossi
    PaymentDetailsByNodo:
      type: object
      properties:
        paymentToken:
          $ref: '#/components/schemas/PaymentToken'
        description:
          $ref: '#/components/schemas/Description'
        creditorReferenceId:
          $ref: '#/components/schemas/CreditorReferenceId'
        fiscalCode:
          $ref: '#/components/schemas/PaTaxCode'
        company:
          $ref: '#/components/schemas/Company'
        office:
          $ref: '#/components/schemas/Office'
        debtor:
          $ref: '#/components/schemas/Debtor'
      additionalProperties: false
      description: Details of a payment notice communicated by the Nodo
      example:
        paymentToken: 648fhg36s95jfg7DS
        description: Health ticket for chest x-ray
        creditorReferenceId: 4839d50603fssfW5X
        fiscalCode: "15376371009"
        company: ASL Roma
        office: Ufficio di Roma
        debtor: Mario Rossi
    TransactionId:
      pattern: "^[a-zA-Z0-9]{1,255}$"
      type: string
      description: Transaction ID
      example: 517a4216840E461fB011036A0fd134E1
    Errors:
      required:
      - errors
      type: object
      properties:
        errors:
          maxItems: 32
          type: array
          items:
            $ref: '#/components/schemas/Error'
      additionalProperties: false
      description: List of errors
      example:
        errors:
        - 00000000A
        - "001000001"
    Error:
      pattern: "^[A-F0-9]{9}$"
      type: string
      description: Error code
      example: "001000005"
    PaTaxCode:
      pattern: "^[0-9]{11}$"
      type: string
      description: Tax code of the creditor company
      example: "15376371009"
    inline_response_200:
      required:
      - outcome
      type: object
      properties:
        outcome:
          $ref: '#/components/schemas/OkOutcome'
      additionalProperties: false
      example:
        outcome: OK
    inline_response_404:
      required:
      - outcome
      type: object
      properties:
        outcome:
          $ref: '#/components/schemas/TrxNotFoundOutcome'
      additionalProperties: false
      example:
        outcome: PAYMENT_NOT_FOUND
  responses:
    PaymentStatusReceived:
      description: Payment status received
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_200'
    TransactionNotFound:
      description: Transaction not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_404'
    Error:
      description: Error response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
  requestBodies:
    PaymentStatusByNodo:
      description: Payment status communicated by the Nodo
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentStatusByNodo'
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      description: This API uses API key when it is invoked by a server application
      name: Ocp-Apim-Subscription-Key
      in: header
