openapi: 3.0.3
info:
  title: Payment Notice Microservice
  description: Payment Notice Microservice for Multi-channel Integration Layer of
    SW Client Project
  contact:
    name: Antonio Tarricone
    email: antonio.tarricone@pagopa.it
  version: 11.0.0
servers:
- url: https://mil-d-apim.azure-api.net/mil-payment-notice
  description: DEV
paths:
  /paymentNotices/{qrCode}:
    get:
      summary: Verify a payment notice by QR-code
      operationId: verifyByQrCode
      parameters:
      - name: RequestId
        in: header
        description: Request Id that will be logged by services
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: Version
        in: header
        description: Version of the required API
        required: false
        schema:
          maxLength: 64
          pattern: "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\\
            d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\\
            +([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          type: string
          example: 1.0.0-alpha-a.b-c-somethinglong+build.1-aef.1-its-okay
      - name: AcquirerId
        in: header
        description: Acquirer ID assigned by PagoPA
        required: true
        schema:
          $ref: '#/components/schemas/AcquirerId'
      - name: Channel
        in: header
        description: Channel originating the request
        required: true
        schema:
          $ref: '#/components/schemas/Channel'
      - name: MerchantId
        in: header
        description: Merchant ID. Mandatory when Channel equals POS.
        required: false
        schema:
          $ref: '#/components/schemas/MerchantId'
      - name: TerminalId
        in: header
        description: ID of the terminal originating the transaction. It must be unique
          per acquirer and channel.
        required: true
        schema:
          $ref: '#/components/schemas/TerminalId'
      - name: qrCode
        in: path
        description: Base64Url of the string encoded by the QR-code. This is due to
          a bug of Azure routing system which decodes %2F before routing the request.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/QrCodeBase64UrlEnc'
      responses:
        "200":
          description: Verify processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Access token is missing or invalid
        "403":
          description: Forbidden
        "404":
          description: Payment notice not found
        "406":
          description: Not acceptable. Did you require application/json?
        "429":
          description: Too many request
        "500":
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
      security:
      - oAuth2:
        - verifyByQrCode
    patch:
      summary: Activate the payment of a notice by QR-code
      operationId: activateByQrCode
      parameters:
      - name: RequestId
        in: header
        description: Request Id that will be logged by services
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: Version
        in: header
        description: Version of the required API
        required: false
        schema:
          maxLength: 64
          pattern: "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\\
            d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\\
            +([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          type: string
          example: 1.0.0-alpha-a.b-c-somethinglong+build.1-aef.1-its-okay
      - name: AcquirerId
        in: header
        description: Acquirer ID assigned by PagoPA
        required: true
        schema:
          $ref: '#/components/schemas/AcquirerId'
      - name: Channel
        in: header
        description: Channel originating the request
        required: true
        schema:
          $ref: '#/components/schemas/Channel'
      - name: MerchantId
        in: header
        description: Merchant ID. Mandatory when Channel equals POS.
        required: false
        schema:
          $ref: '#/components/schemas/MerchantId'
      - name: TerminalId
        in: header
        description: ID of the terminal originating the transaction. It must be unique
          per acquirer and channel.
        required: true
        schema:
          $ref: '#/components/schemas/TerminalId'
      - name: qrCode
        in: path
        description: Base64Url of the string encoded by the QR-code. This is due to
          a bug of Azure routing system which decodes %2F before routing the request.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/QrCodeBase64UrlEnc'
      requestBody:
        $ref: '#/components/requestBodies/Activate'
      responses:
        "200":
          description: Activate processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Access token is missing or invalid
        "403":
          description: Forbidden
        "404":
          description: Payment notice not found
        "406":
          description: Not acceptable. Did you require application/json?
        "415":
          description: Unsupported media type. Did you provide application/json?
        "429":
          description: Too many request
        "500":
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
      security:
      - oAuth2:
        - activateByQrCode
  /paymentNotices/{paTaxCode}/{noticeNumber}:
    get:
      summary: Verify a payment notice by PA tax code and notice number
      operationId: verifyByTaxCodeAndNoticeNumber
      parameters:
      - name: RequestId
        in: header
        description: Request Id that will be logged by services
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: Version
        in: header
        description: Version of the required API
        required: false
        schema:
          maxLength: 64
          pattern: "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\\
            d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\\
            +([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          type: string
          example: 1.0.0-alpha-a.b-c-somethinglong+build.1-aef.1-its-okay
      - name: AcquirerId
        in: header
        description: Acquirer ID assigned by PagoPA
        required: true
        schema:
          $ref: '#/components/schemas/AcquirerId'
      - name: Channel
        in: header
        description: Channel originating the request
        required: true
        schema:
          $ref: '#/components/schemas/Channel'
      - name: MerchantId
        in: header
        description: Merchant ID. Mandatory when Channel equals POS.
        required: false
        schema:
          $ref: '#/components/schemas/MerchantId'
      - name: TerminalId
        in: header
        description: ID of the terminal originating the transaction. It must be unique
          per acquirer and channel.
        required: true
        schema:
          $ref: '#/components/schemas/TerminalId'
      - name: paTaxCode
        in: path
        description: Tax code of the creditor company
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/PaTaxCode'
      - name: noticeNumber
        in: path
        description: Notice number
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/NoticeNumber'
      responses:
        "200":
          description: Verify processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Access token is missing or invalid
        "403":
          description: Forbidden
        "404":
          description: Payment notice not found
        "406":
          description: Not acceptable. Did you require application/json?
        "429":
          description: Too many request
        "500":
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
      security:
      - oAuth2:
        - verifyByTaxCodeAndNoticeNumber
    patch:
      summary: Activate the payment of a notice by PA tax code and notice number
      operationId: activateByTaxCodeAndNoticeNumber
      parameters:
      - name: RequestId
        in: header
        description: Request Id that will be logged by services
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: Version
        in: header
        description: Version of the required API
        required: false
        schema:
          maxLength: 64
          pattern: "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\\
            d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\\
            +([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          type: string
          example: 1.0.0-alpha-a.b-c-somethinglong+build.1-aef.1-its-okay
      - name: AcquirerId
        in: header
        description: Acquirer ID assigned by PagoPA
        required: true
        schema:
          $ref: '#/components/schemas/AcquirerId'
      - name: Channel
        in: header
        description: Channel originating the request
        required: true
        schema:
          $ref: '#/components/schemas/Channel'
      - name: MerchantId
        in: header
        description: Merchant ID. Mandatory when Channel equals POS.
        required: false
        schema:
          $ref: '#/components/schemas/MerchantId'
      - name: TerminalId
        in: header
        description: ID of the terminal originating the transaction. It must be unique
          per acquirer and channel.
        required: true
        schema:
          $ref: '#/components/schemas/TerminalId'
      - name: paTaxCode
        in: path
        description: Tax code of the creditor company
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/PaTaxCode'
      - name: noticeNumber
        in: path
        description: Notice number
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/NoticeNumber'
      requestBody:
        $ref: '#/components/requestBodies/Activate'
      responses:
        "200":
          description: Activate processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Access token is missing or invalid
        "403":
          description: Forbidden
        "404":
          description: Payment notice not found
        "406":
          description: Not acceptable. Did you require application/json?
        "415":
          description: Unsupported media type. Did you provide application/json?
        "429":
          description: Too many request
        "500":
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
      security:
      - oAuth2:
        - activateByTaxCodeAndNoticeNumber
  /payments:
    get:
      summary: Get last 30 transactions executed by the client in the last 30 days
      operationId: getLastTransactions
      parameters:
      - name: RequestId
        in: header
        description: Request Id that will be logged by services
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: Version
        in: header
        description: Version of the required API
        required: false
        schema:
          maxLength: 64
          pattern: "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\\
            d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\\
            +([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          type: string
          example: 1.0.0-alpha-a.b-c-somethinglong+build.1-aef.1-its-okay
      - name: AcquirerId
        in: header
        description: Acquirer ID assigned by PagoPA
        required: true
        schema:
          $ref: '#/components/schemas/AcquirerId'
      - name: Channel
        in: header
        description: Channel originating the request
        required: true
        schema:
          $ref: '#/components/schemas/Channel'
      - name: MerchantId
        in: header
        description: Merchant ID. Mandatory when Channel equals POS.
        required: false
        schema:
          $ref: '#/components/schemas/MerchantId'
      - name: TerminalId
        in: header
        description: ID of the terminal originating the transaction. It must be unique
          per acquirer and channel.
        required: true
        schema:
          $ref: '#/components/schemas/TerminalId'
      responses:
        "200":
          description: Details of transactions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transactions'
        "400":
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Access token is missing or invalid
        "403":
          description: Forbidden
        "406":
          description: Not acceptable. Did you require application/json?
        "429":
          description: Too many request
        "500":
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
      security:
      - oAuth2:
        - getLastTransactions
    post:
      summary: Pre-close or abort the payment of a set of notices
      operationId: preCloseOrAbort
      parameters:
      - name: RequestId
        in: header
        description: Request Id that will be logged by services
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: Version
        in: header
        description: Version of the required API
        required: false
        schema:
          maxLength: 64
          pattern: "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\\
            d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\\
            +([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          type: string
          example: 1.0.0-alpha-a.b-c-somethinglong+build.1-aef.1-its-okay
      - name: AcquirerId
        in: header
        description: Acquirer ID assigned by PagoPA
        required: true
        schema:
          $ref: '#/components/schemas/AcquirerId'
      - name: Channel
        in: header
        description: Channel originating the request
        required: true
        schema:
          $ref: '#/components/schemas/Channel'
      - name: MerchantId
        in: header
        description: Merchant ID. Mandatory when Channel equals POS.
        required: false
        schema:
          $ref: '#/components/schemas/MerchantId'
      - name: TerminalId
        in: header
        description: ID of the terminal originating the transaction. It must be unique
          per acquirer and channel.
        required: true
        schema:
          $ref: '#/components/schemas/TerminalId'
      requestBody:
        $ref: '#/components/requestBodies/PreCloseOrAbort'
      responses:
        "201":
          description: Response to pre-close ora abort successfully processed
          headers:
            Location:
              description: URL to get the status of the transaction
              required: false
              style: simple
              explode: false
              schema:
                $ref: '#/components/schemas/URI'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201'
        "400":
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Access token is missing or invalid
        "403":
          description: Forbidden
        "406":
          description: Not acceptable. Did you require application/json?
        "415":
          description: Unsupported media type. Did you provide application/json?
        "429":
          description: Too many request
        "500":
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
      security:
      - oAuth2:
        - preCloseOrAbort
  /payments/{transactionId}:
    get:
      summary: Retrieve the status of the payment of a set of payment notices
      operationId: getPaymentStatus
      parameters:
      - name: transactionId
        in: path
        description: Transaction ID
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/TransactionId'
      - name: RequestId
        in: header
        description: Request Id that will be logged by services
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: Version
        in: header
        description: Version of the required API
        required: false
        schema:
          maxLength: 64
          pattern: "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\\
            d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\\
            +([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          type: string
          example: 1.0.0-alpha-a.b-c-somethinglong+build.1-aef.1-its-okay
      - name: AcquirerId
        in: header
        description: Acquirer ID assigned by PagoPA
        required: true
        schema:
          $ref: '#/components/schemas/AcquirerId'
      - name: Channel
        in: header
        description: Channel originating the request
        required: true
        schema:
          $ref: '#/components/schemas/Channel'
      - name: MerchantId
        in: header
        description: Merchant ID. Mandatory when Channel equals POS.
        required: false
        schema:
          $ref: '#/components/schemas/MerchantId'
      - name: TerminalId
        in: header
        description: ID of the terminal originating the transaction. It must be unique
          per acquirer and channel.
        required: true
        schema:
          $ref: '#/components/schemas/TerminalId'
      responses:
        "200":
          description: Payment status received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentStatus'
        "400":
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Access token is missing or invalid
        "403":
          description: Forbidden
        "404":
          description: Payment status not found
        "406":
          description: Not acceptable. Did you require application/json?
        "429":
          description: Too many request
        "500":
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
      security:
      - oAuth2:
        - getPaymentStatus
    post:
      tags:
      - internal
      summary: Receive from the Nodo the result of the payment of a set of payment
        notices. This API is invoked by the Nodo for sendPaymentResult.
      operationId: receivePaymentStatus
      parameters:
      - name: transactionId
        in: path
        description: Transaction ID
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/TransactionId'
      requestBody:
        $ref: '#/components/requestBodies/PaymentStatusByNodo'
      responses:
        "200":
          description: Payment status received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201'
        "400":
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: API key is missing or invalid
        "403":
          description: Forbidden
        "404":
          description: Transaction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_404'
        "406":
          description: Not acceptable. Did you require application/json?
        "415":
          description: Unsupported media type. Did you provide application/json?
        "429":
          description: Too many request
        "500":
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
      security:
      - ApiKeyAuth: []
    patch:
      summary: Comunicate the outcome of the e-money transaction executed to pay a
        set of notices
      operationId: close
      parameters:
      - name: transactionId
        in: path
        description: Transaction ID
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/TransactionId'
      - name: RequestId
        in: header
        description: Request Id that will be logged by services
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: Version
        in: header
        description: Version of the required API
        required: false
        schema:
          maxLength: 64
          pattern: "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\\
            d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\\
            +([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          type: string
          example: 1.0.0-alpha-a.b-c-somethinglong+build.1-aef.1-its-okay
      - name: AcquirerId
        in: header
        description: Acquirer ID assigned by PagoPA
        required: true
        schema:
          $ref: '#/components/schemas/AcquirerId'
      - name: Channel
        in: header
        description: Channel originating the request
        required: true
        schema:
          $ref: '#/components/schemas/Channel'
      - name: MerchantId
        in: header
        description: Merchant ID. Mandatory when Channel equals POS.
        required: false
        schema:
          $ref: '#/components/schemas/MerchantId'
      - name: TerminalId
        in: header
        description: ID of the terminal originating the transaction. It must be unique
          per acquirer and channel.
        required: true
        schema:
          $ref: '#/components/schemas/TerminalId'
      requestBody:
        $ref: '#/components/requestBodies/Close'
      responses:
        "201":
          description: Response to close successfully processed
          headers:
            Location:
              description: URL to check the status of payment confirmation. If outcome
                = OK the field is present.
              required: false
              style: simple
              explode: false
              schema:
                $ref: '#/components/schemas/URI'
            Retry-After:
              description: Number of seconds after which to check the status of payment
                confirmation. If outcome = OK the field is present.
              required: false
              style: simple
              explode: false
              schema:
                $ref: '#/components/schemas/PositiveInteger'
            Max-Retries:
              description: Max number of retries to check the status of payment confirmation.
                If outcome = OK the field is present.
              required: false
              style: simple
              explode: false
              schema:
                $ref: '#/components/schemas/PositiveInteger'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201_1'
        "400":
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Access token is missing or invalid
        "403":
          description: Forbidden
        "404":
          description: Not found
        "406":
          description: Not acceptable. Did you require application/json?
        "415":
          description: Unsupported media type. Did you provide application/json?
        "429":
          description: Too many request
        "500":
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
      security:
      - oAuth2:
        - close
components:
  schemas:
    AbortOutcome:
      type: string
      description: Constant value (ABORT) outcome
      example: ABORT
      enum:
      - ABORT
    AllOrNothingOutcome:
      type: string
      description: Dual values (OK or KO) outcome
      example: OK
      enum:
      - OK
      - KO
    Company:
      pattern: "^[ -~]{1,140}$"
      type: string
      description: Name of the creditor company
      example: ASL Roma
    CloseOutcome:
      type: string
      description: Outcome for close operation
      example: CLOSE
      enum:
      - CLOSE
      - ERROR_ON_PAYMENT
    CreditorReferenceId:
      pattern: "^[ -~]{1,35}$"
      type: string
      description: ID for the creditor company
      example: 4839d50603fssfW5X
    Debtor:
      pattern: "^[ -~]{0,1024}$"
      type: string
      description: Debtor unstructured data
      example: Mario Rossi
    Description:
      pattern: "^[ -~]{1,140}$"
      type: string
      description: Payment notice description
      example: Health ticket for chest x-ray
    DueDate:
      maxLength: 10
      type: string
      description: Expiration date of the payment notice
      format: date
      example: 2022-11-30
    IdempotencyKey:
      pattern: "^[0-9]{11}_[a-zA-Z0-9]{10}$"
      type: string
      description: Idempotency key for activate request
      example: 47583764545_Ahf479elk0
    Note:
      pattern: "^[ -~]{1,210}$"
      type: string
      description: Payment notice note
      example: This is a payment notice
    NoticeNumber:
      pattern: "^[0-9]{18}$"
      type: string
      description: Notice number
      example: "485564829563528563"
    Office:
      pattern: "^[ -~]{1,140}$"
      type: string
      description: Name of the creditor company office
      example: Ufficio di Roma
    OkOutcome:
      type: string
      description: Constant value (OK) outcome
      example: OK
      enum:
      - OK
    KoOutcome:
      type: string
      description: Outcome returned to verify and activate operations when something
        went wrong
      example: NOTICE_GLITCH
      enum:
      - NOTICE_GLITCH
      - WRONG_NOTICE_DATA
      - CREDITOR_PROBLEMS
      - PAYMENT_ALREADY_IN_PROGRESS
      - EXPIRED_NOTICE
      - REVOKED_NOTICE
      - NOTICE_ALREADY_PAID
      - UNKNOWN_NOTICE
      - UNEXPECTED_ERROR
    PaymentToken:
      pattern: "^[ -~]{1,35}$"
      type: string
      description: ID of the payment activation
      example: 648fhg36s95jfg7DS
    PreCloseOutcome:
      type: string
      description: Constant value (PRE_CLOSE) outcome
      example: PRE_CLOSE
      enum:
      - PRE_CLOSE
    QrCodeBase64UrlEnc:
      pattern: "^[a-zA-Z0-9_-]{32,128}$"
      type: string
      description: Base64Url of the string encoded by the QR-code. This is due to
        a bug of Azure routing system which decodes %2F before routing the request.
      example: UEFHT1BBfDAwMnwwMDAwMDAwMDAwMDAwMDAwMDB8MDAwMDAwMDAwMDB8OTk5OQ
    TransactionStatus:
      type: string
      description: Status of the transaction
      example: CLOSED
      enum:
      - PRE_CLOSE
      - PENDING
      - ERROR_ON_CLOSE
      - CLOSED
      - ERROR_ON_RESULT
      - ERROR_ON_PAYMENT
      - ABORTED
    PaymentStatus:
      required:
      - acquirerId
      - channel
      - insertTimestamp
      - notices
      - status
      - terminalId
      - totalAmount
      - transactionId
      type: object
      properties:
        transactionId:
          $ref: '#/components/schemas/TransactionId'
        acquirerId:
          $ref: '#/components/schemas/AcquirerId'
        channel:
          $ref: '#/components/schemas/Channel'
        merchantId:
          $ref: '#/components/schemas/MerchantId'
        terminalId:
          $ref: '#/components/schemas/TerminalId'
        insertTimestamp:
          maxLength: 19
          type: string
          description: Record registration timestamp (timestamp of pre-close or abort)
          format: date-time
        notices:
          maxItems: 5
          type: array
          description: Details of payment notices
          items:
            $ref: '#/components/schemas/PaymentNoticeFullDetails'
        totalAmount:
          $ref: '#/components/schemas/EuroCents'
        fee:
          $ref: '#/components/schemas/EuroCents'
        status:
          $ref: '#/components/schemas/TransactionStatus'
        paymentMethod:
          $ref: '#/components/schemas/PaymentMethod'
        paymentTimestamp:
          maxLength: 19
          type: string
          description: Timestamp of e-money transaction
          format: date-time
        closeTimestamp:
          maxLength: 19
          type: string
          description: Timestamp of the confirmation from the Client
          format: date-time
        paymentDate:
          maxLength: 19
          type: string
          description: Notification timestamp
          format: date-time
        callbackTimestamp:
          maxLength: 19
          type: string
          description: Timestamp of the callback (sendPaymentResult) from the Nodo.
          format: date-time
      additionalProperties: false
      description: Payment status
      example:
        transactionId: 517a4216840E461fB011036A0fd134E1
        acquirerId: "4585625"
        channel: POS
        merchantId: 28405fHfk73x88D
        terminalId: 0aB9wXyZ
        insertTimestamp: 2023-04-11T16:20:34
        notices:
        - paymentToken: 648fhg36s95jfg7DS
          paTaxCode: "15376371009"
          noticeNumber: "485564829563528563"
          amount: 12345
          description: Health ticket for chest x-ray
          company: ASL Roma
          office: Ufficio di Roma
        totalAmount: 12395
        fee: 50
        status: PRE_CLOSE
    PaymentNoticeFullDetails:
      required:
      - noticeNumber
      - paTaxCode
      - paymentToken
      type: object
      properties:
        paymentToken:
          $ref: '#/components/schemas/PaymentToken'
        paTaxCode:
          $ref: '#/components/schemas/PaTaxCode'
        noticeNumber:
          $ref: '#/components/schemas/NoticeNumber'
        amount:
          $ref: '#/components/schemas/EuroCents'
        description:
          $ref: '#/components/schemas/Description'
        company:
          $ref: '#/components/schemas/Company'
        office:
          $ref: '#/components/schemas/Office'
        creditorReferenceId:
          $ref: '#/components/schemas/CreditorReferenceId'
        debtor:
          $ref: '#/components/schemas/Debtor'
      additionalProperties: false
      description: Full details of the payment notice
      example:
        paymentToken: 648fhg36s95jfg7DS
        paTaxCode: "15376371009"
        noticeNumber: "485564829563528563"
        amount: 12345
        description: Health ticket for chest x-ray
        company: ASL Roma
        office: Ufficio di Roma
        creditorReferenceId: 4839d50603fssfW5X
        debtor: Mario Rossi
    Transactions:
      type: object
      properties:
        transactions:
          maxItems: 30
          type: array
          items:
            $ref: '#/components/schemas/PaymentStatus'
      additionalProperties: false
      description: Details of transactions
      example:
        transactions:
        - transactionId: 517a4216840E461fB011036A0fd134E1
          acquirerId: "4585625"
          channel: POS
          merchantId: 28405fHfk73x88D
          terminalId: 0aB9wXyZ
          insertTimestamp: 2023-04-11T16:20:34
          notices:
          - paymentToken: 648fhg36s95jfg7DS
            paTaxCode: "15376371009"
            noticeNumber: "485564829563528563"
            amount: 12345
            description: Health ticket for chest x-ray
            company: ASL Roma
            office: Ufficio di Roma
          totalAmount: 12395
          fee: 50
          status: PRE_CLOSE
    PaymentStatusByNodo:
      required:
      - outcome
      - paymentDate
      - payments
      type: object
      properties:
        outcome:
          $ref: '#/components/schemas/AllOrNothingOutcome'
        paymentDate:
          maxLength: 19
          type: string
          description: Notification timestamp
          format: date-time
        payments:
          maxItems: 5
          type: array
          description: Details of payment notices
          items:
            $ref: '#/components/schemas/PaymentDetailsByNodo'
      additionalProperties: false
      description: Payment status communicated by the Nodo
      example:
        outcome: OK
        paymentDate: 2022-11-12T08:53:55
        payments:
        - paymentToken: 648fhg36s95jfg7DS
          description: Health ticket for chest x-ray
          creditorReferenceId: 4839d50603fssfW5X
          fiscalCode: "15376371009"
          company: ASL Roma
          office: Ufficio di Roma
          debtor: Mario Rossi
    PaymentDetailsByNodo:
      type: object
      properties:
        paymentToken:
          $ref: '#/components/schemas/PaymentToken'
        description:
          $ref: '#/components/schemas/Description'
        creditorReferenceId:
          $ref: '#/components/schemas/CreditorReferenceId'
        fiscalCode:
          $ref: '#/components/schemas/PaTaxCode'
        company:
          $ref: '#/components/schemas/Company'
        office:
          $ref: '#/components/schemas/Office'
        debtor:
          $ref: '#/components/schemas/Debtor'
      additionalProperties: false
      description: Details of a payment notice communicated by the Nodo
      example:
        paymentToken: 648fhg36s95jfg7DS
        description: Health ticket for chest x-ray
        creditorReferenceId: 4839d50603fssfW5X
        fiscalCode: "15376371009"
        company: ASL Roma
        office: Ufficio di Roma
        debtor: Mario Rossi
    TrxNotFoundOutcome:
      type: string
      description: Constant value (PAYMENT_NOT_FOUND) outcome
      example: PAYMENT_NOT_FOUND
      enum:
      - PAYMENT_NOT_FOUND
    VerifyOrActivateKo:
      required:
      - outcome
      type: object
      properties:
        outcome:
          $ref: '#/components/schemas/KoOutcome'
      description: Response to verify or activate payment notice when something went
        wrong
      example:
        outcome: NOTICE_GLITCH
    VerifyOk:
      required:
      - amount
      - noticeNumber
      - outcome
      - paTaxCode
      type: object
      properties:
        outcome:
          $ref: '#/components/schemas/OkOutcome'
        amount:
          $ref: '#/components/schemas/EuroCents'
        dueDate:
          $ref: '#/components/schemas/DueDate'
        note:
          $ref: '#/components/schemas/Note'
        description:
          $ref: '#/components/schemas/Description'
        company:
          $ref: '#/components/schemas/Company'
        office:
          $ref: '#/components/schemas/Office'
        paTaxCode:
          $ref: '#/components/schemas/PaTaxCode'
        noticeNumber:
          $ref: '#/components/schemas/NoticeNumber'
      description: Response to verify payment notice when all went ok
      example:
        outcome: OK
        amount: 12345
        paTaxCode: "15376371009"
        noticeNumber: "485564829563528563"
    ActivateOk:
      required:
      - paymentToken
      type: object
      properties:
        outcome:
          $ref: '#/components/schemas/OkOutcome'
        amount:
          $ref: '#/components/schemas/EuroCents'
        paTaxCode:
          $ref: '#/components/schemas/PaTaxCode'
        paymentToken:
          $ref: '#/components/schemas/PaymentToken'
        transfers:
          maxItems: 5
          type: array
          items:
            $ref: '#/components/schemas/Transfer'
      description: Response to activate payment notice when all went ok
      example:
        outcome: OK
        amount: 12345
        paTaxCode: "15376371009"
        paymentToken: 648fhg36s95jfg7DS
        transfers:
        - paTaxCode: "15376371009"
          category: KTM
    PreClose:
      required:
      - fee
      - outcome
      - paymentTokens
      - transactionId
      type: object
      properties:
        outcome:
          $ref: '#/components/schemas/PreCloseOutcome'
        paymentTokens:
          maxItems: 5
          type: array
          items:
            $ref: '#/components/schemas/PaymentToken'
        transactionId:
          $ref: '#/components/schemas/TransactionId'
        fee:
          $ref: '#/components/schemas/EuroCents'
      additionalProperties: true
      description: Request to pre-close the payment of a set of payment notices
      example:
        outcome: PRE_CLOSE
        paymentTokens:
        - 648fhg36s95jfg7DS
        transactionId: 517a4216840E461fB011036A0fd134E1
        fee: 50
    Abort:
      required:
      - outcome
      - paymentTokens
      type: object
      properties:
        outcome:
          $ref: '#/components/schemas/AbortOutcome'
        paymentTokens:
          maxItems: 5
          type: array
          items:
            $ref: '#/components/schemas/PaymentToken'
      description: Request to abort the payment of a set of payment notices
      example:
        outcome: ABORT
        paymentTokens:
        - 648fhg36s95jfg7DS
    UUID:
      pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
      type: string
      description: UUID
      format: uuid
      example: d0d654e6-97da-4848-b568-99fedccb642b
    AcquirerId:
      pattern: "^\\d{1,11}$"
      type: string
      description: Acquirer ID assigned by PagoPA
      example: "4585625"
    Channel:
      type: string
      description: Channel originating the request
      example: ATM
      enum:
      - ATM
      - POS
      - TOTEM
      - CASH_REGISTER
      - CSA
    MerchantId:
      pattern: "^[0-9a-zA-Z]{1,15}$"
      type: string
      description: Merchant ID. Mandatory when Channel equals POS.
      example: 28405fHfk73x88D
    TerminalId:
      pattern: "^[0-9a-zA-Z]{1,8}$"
      type: string
      description: ID of the terminal originating the transaction. It must be unique
        per acquirer and channel.
      example: 0aB9wXyZ
    Errors:
      required:
      - errors
      type: object
      properties:
        errors:
          maxItems: 32
          type: array
          items:
            $ref: '#/components/schemas/Error'
      additionalProperties: false
      description: List of errors
      example:
        errors:
        - 00000000A
        - "001000001"
    Error:
      pattern: "^[A-F0-9]{9}$"
      type: string
      description: Error code
      example: "001000005"
    PaTaxCode:
      pattern: "^[0-9]{11}$"
      type: string
      description: Tax code of the creditor company
      example: "15376371009"
    URI:
      pattern: "^[ -~]{1,2048}$"
      type: string
      description: URI
      format: uri
    TransactionId:
      pattern: "^[a-zA-Z0-9]{1,255}$"
      type: string
      description: Transaction ID
      example: 517a4216840E461fB011036A0fd134E1
    PositiveInteger:
      minimum: 1
      type: integer
      description: Non negative integer
      example: 234
    EuroCents:
      maximum: 99999999999
      minimum: 1
      type: integer
      description: Amount in euro cents
      format: int64
      example: 12345
    PaymentMethod:
      type: string
      description: Method used to pay notice/s
      example: PAGOBANCOMAT
      enum:
      - PAGOBANCOMAT
      - DEBIT_CARD
      - CREDIT_CARD
      - PAYMENT_CARD
      - BANK_ACCOUNT
      - CASH
    Transfer:
      required:
      - category
      - paTaxCode
      type: object
      properties:
        paTaxCode:
          $ref: '#/components/schemas/PaTaxCode'
        category:
          $ref: '#/components/schemas/Category'
      additionalProperties: false
      description: Transfer essential data
      example:
        paTaxCode: "15376371009"
        category: KTM
    Category:
      pattern: "^[ -~]{0,1024}$"
      type: string
      description: Transfer category
      example: KTM
    inline_response_200:
      oneOf:
      - $ref: '#/components/schemas/VerifyOk'
      - $ref: '#/components/schemas/VerifyOrActivateKo'
    inline_response_200_1:
      oneOf:
      - $ref: '#/components/schemas/ActivateOk'
      - $ref: '#/components/schemas/VerifyOrActivateKo'
    inline_response_201:
      required:
      - outcome
      type: object
      properties:
        outcome:
          $ref: '#/components/schemas/OkOutcome'
      additionalProperties: false
      example:
        outcome: OK
    inline_response_404:
      required:
      - outcome
      type: object
      properties:
        outcome:
          $ref: '#/components/schemas/TrxNotFoundOutcome'
      additionalProperties: false
      example:
        outcome: PAYMENT_NOT_FOUND
    inline_response_201_1:
      required:
      - outcome
      type: object
      properties:
        outcome:
          $ref: '#/components/schemas/AllOrNothingOutcome'
      additionalProperties: false
      example:
        outcome: OK
  responses:
    VerifyProcessed:
      description: Verify processed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_200'
    ActivateProcessed:
      description: Activate processed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_200_1'
    PreCloseOrAbortProcessed:
      description: Response to pre-close ora abort successfully processed
      headers:
        Location:
          description: URL to get the status of the transaction
          required: false
          style: simple
          explode: false
          schema:
            $ref: '#/components/schemas/URI'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_201'
    CloseProcessed:
      description: Response to close successfully processed
      headers:
        Location:
          description: URL to check the status of payment confirmation. If outcome
            = OK the field is present.
          required: false
          style: simple
          explode: false
          schema:
            $ref: '#/components/schemas/URI'
        Retry-After:
          description: Number of seconds after which to check the status of payment
            confirmation. If outcome = OK the field is present.
          required: false
          style: simple
          explode: false
          schema:
            $ref: '#/components/schemas/PositiveInteger'
        Max-Retries:
          description: Max number of retries to check the status of payment confirmation.
            If outcome = OK the field is present.
          required: false
          style: simple
          explode: false
          schema:
            $ref: '#/components/schemas/PositiveInteger'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_201_1'
    PaymentStatus:
      description: Payment status received
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentStatus'
    PaymentStatusReceived:
      description: Payment status received
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_201'
    TransactionNotFound:
      description: Transaction not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_404'
    Transactions:
      description: Details of transactions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Transactions'
    Error:
      description: Error response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
  parameters:
    RequestId:
      name: RequestId
      in: header
      description: Request Id that will be logged by services
      required: true
      schema:
        $ref: '#/components/schemas/UUID'
    Version:
      name: Version
      in: header
      description: Version of the required API
      required: false
      schema:
        maxLength: 64
        pattern: "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\\
          d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\\
          +([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
        type: string
        example: 1.0.0-alpha-a.b-c-somethinglong+build.1-aef.1-its-okay
    AcquirerId:
      name: AcquirerId
      in: header
      description: Acquirer ID assigned by PagoPA
      required: true
      schema:
        $ref: '#/components/schemas/AcquirerId'
    Channel:
      name: Channel
      in: header
      description: Channel originating the request
      required: true
      schema:
        $ref: '#/components/schemas/Channel'
    MerchantId:
      name: MerchantId
      in: header
      description: Merchant ID. Mandatory when Channel equals POS.
      required: false
      schema:
        $ref: '#/components/schemas/MerchantId'
    TerminalId:
      name: TerminalId
      in: header
      description: ID of the terminal originating the transaction. It must be unique
        per acquirer and channel.
      required: true
      schema:
        $ref: '#/components/schemas/TerminalId'
  requestBodies:
    Activate:
      description: Request to activate payment notice
      content:
        application/json:
          schema:
            required:
            - amount
            - idempotencyKey
            type: object
            properties:
              idempotencyKey:
                $ref: '#/components/schemas/IdempotencyKey'
              amount:
                $ref: '#/components/schemas/EuroCents'
            additionalProperties: false
            example:
              idempotencyKey: 47583764545_Ahf479elk0
              amount: 12345
    PreCloseOrAbort:
      description: Request to pre-close or abort a transaction
      content:
        application/json:
          schema:
            oneOf:
            - $ref: '#/components/schemas/PreClose'
            - $ref: '#/components/schemas/Abort'
    Close:
      description: Request to close a transaction
      content:
        application/json:
          schema:
            required:
            - outcome
            - paymentMethod
            - paymentTimestamp
            type: object
            properties:
              outcome:
                $ref: '#/components/schemas/CloseOutcome'
              paymentMethod:
                $ref: '#/components/schemas/PaymentMethod'
              paymentTimestamp:
                maxLength: 19
                type: string
                description: Timestamp of e-money transaction
                format: date-time
            additionalProperties: false
            example:
              outcome: CLOSE
              paymentMethod: PAGOBANCOMAT
              paymentTimestamp: 2022-11-12T08:53:55
    PaymentStatusByNodo:
      description: Payment status communicated by the Nodo
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentStatusByNodo'
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      description: This API uses API key when it is invoked by a server application
      name: Ocp-Apim-Subscription-Key
      in: header
    oAuth2:
      type: oauth2
      description: This API uses OAuth2
      flows:
        password:
          tokenUrl: ../mil-idp/pwd/token
          scopes:
            verifyByQrCode: Verify a payment notice by QR-code
            activateByQrCode: Activate the payment of a notice by QR-code
            verifyByTaxCodeAndNoticeNumber: Verify a payment notice by PA tax code
              and notice number
            activateByTaxCodeAndNoticeNumber: Activate the payment of a notice by
              PA tax code and notice number
            preCloseOrAbort: Pre-close or abort the payment of a set of notices
            close: Close the payment of a set of notices
            getPaymentStatus: Retrieve the status of the payment of a set of payment
              notices
            getLastTransactions: Get last 30 transactions executed by the client in
              the last 30 days
            getFee: Calculate the fee amount for a set of payment notices
            getServices: Return the list of services available for end-users
            deleteSessionById: Delete a session by ID
            createSession: Create a session
            checkPairingStatus: Retrieve the pairing status with IO
            accept: Store the acceptance of T&C for the user identified by the tax
              code stored in the session
            presaveExplicit: Pre-save the payment card in the internal Wallet
        clientCredentials:
          tokenUrl: ../mil-ipd/clt/token
          scopes:
            verifyByQrCode: Verify a payment notice by QR-code
            activateByQrCode: Activate the payment of a notice by QR-code
            verifyByTaxCodeAndNoticeNumber: Verify a payment notice by PA tax code
              and notice number
            activateByTaxCodeAndNoticeNumber: Activate the payment of a notice by
              PA tax code and notice number
            preCloseOrAbort: Pre-close or abort the payment of a set of notices
            close: Close the payment of a set of notices
            getPaymentStatus: Retrieve the status of the payment of a set of payment
              notices
            getLastTransactions: Get last 30 transactions executed by the client in
              the last 30 days
            getFee: Calculate the fee amount for a set of payment notices
            getServices: Return the list of services available for end-users
            deleteSessionById: Delete a session by ID
            createSession: Create a session
            checkPairingStatus: Retrieve the pairing status with IO
            accept: Store the acceptance of T&C for the user identified by the tax
              code stored in the session
            presaveExplicit: Pre-save the payment card in the internal Wallet
