openapi: 3.0.3
info:
  title: Session Microservice
  description: Session Microservice for Multi-channel Integration Layer of SW Client
    Project
  contact:
    name: Antonio Tarricone
    email: antonio.tarricone@pagopa.it
  version: 5.0.0
servers:
- url: https://mil-d-apim.azure-api.net/mil-session
  description: DEV
paths:
  /sessions/{id}:
    get:
      tags:
      - internal
      summary: Read a session by ID
      operationId: getSessionById
      parameters:
      - name: RequestId
        in: header
        description: Request Id that will be logged by services
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: Version
        in: header
        description: Version of the required API
        required: false
        schema:
          maxLength: 64
          pattern: "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\\
            d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\\
            +([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          type: string
          example: 1.0.0-alpha-a.b-c-somethinglong+build.1-aef.1-its-okay
      - name: AcquirerId
        in: header
        description: Acquirer ID assigned by PagoPA
        required: true
        schema:
          $ref: '#/components/schemas/AcquirerId'
      - name: Channel
        in: header
        description: Channel originating the request
        required: true
        schema:
          $ref: '#/components/schemas/Channel'
      - name: MerchantId
        in: header
        description: Merchant ID. Mandatory when Channel equals POS.
        required: false
        schema:
          $ref: '#/components/schemas/MerchantId'
      - name: TerminalId
        in: header
        description: ID of the terminal originating the transaction. It must be unique
          per acquirer and channel.
        required: true
        schema:
          $ref: '#/components/schemas/TerminalId'
      - name: id
        in: path
        description: Session ID
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "200":
          description: Session retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: API key is missing or invalid
        "403":
          description: Forbidden
        "404":
          description: Session not found
        "406":
          description: Not acceptable. Did you require application/json?
        "429":
          description: Too many request
        "500":
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
      security:
      - ApiKeyAuth: []
    delete:
      summary: Delete a session by ID
      operationId: deleteSessionById
      parameters:
      - name: RequestId
        in: header
        description: Request Id that will be logged by services
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: Version
        in: header
        description: Version of the required API
        required: false
        schema:
          maxLength: 64
          pattern: "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\\
            d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\\
            +([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          type: string
          example: 1.0.0-alpha-a.b-c-somethinglong+build.1-aef.1-its-okay
      - name: AcquirerId
        in: header
        description: Acquirer ID assigned by PagoPA
        required: true
        schema:
          $ref: '#/components/schemas/AcquirerId'
      - name: Channel
        in: header
        description: Channel originating the request
        required: true
        schema:
          $ref: '#/components/schemas/Channel'
      - name: MerchantId
        in: header
        description: Merchant ID. Mandatory when Channel equals POS.
        required: false
        schema:
          $ref: '#/components/schemas/MerchantId'
      - name: TerminalId
        in: header
        description: ID of the terminal originating the transaction. It must be unique
          per acquirer and channel.
        required: true
        schema:
          $ref: '#/components/schemas/TerminalId'
      - name: id
        in: path
        description: Session ID
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        "204":
          description: Session deleted
        "400":
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Access token is missing or invalid
        "403":
          description: Forbidden
        "404":
          description: Session not found
        "406":
          description: Not acceptable. Did you require application/json?
        "429":
          description: Too many request
        "500":
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
      security:
      - oAuth2:
        - deleteSessionById
    patch:
      tags:
      - internal
      summary: Update partially a session by ID
      operationId: updateSessionById
      parameters:
      - name: RequestId
        in: header
        description: Request Id that will be logged by services
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: Version
        in: header
        description: Version of the required API
        required: false
        schema:
          maxLength: 64
          pattern: "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\\
            d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\\
            +([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          type: string
          example: 1.0.0-alpha-a.b-c-somethinglong+build.1-aef.1-its-okay
      - name: AcquirerId
        in: header
        description: Acquirer ID assigned by PagoPA
        required: true
        schema:
          $ref: '#/components/schemas/AcquirerId'
      - name: Channel
        in: header
        description: Channel originating the request
        required: true
        schema:
          $ref: '#/components/schemas/Channel'
      - name: MerchantId
        in: header
        description: Merchant ID. Mandatory when Channel equals POS.
        required: false
        schema:
          $ref: '#/components/schemas/MerchantId'
      - name: TerminalId
        in: header
        description: ID of the terminal originating the transaction. It must be unique
          per acquirer and channel.
        required: true
        schema:
          $ref: '#/components/schemas/TerminalId'
      - name: id
        in: path
        description: Session ID
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/UUID'
      requestBody:
        $ref: '#/components/requestBodies/UpdateSession'
      responses:
        "202":
          description: Response returned when the request to update a session has
            been accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_202'
        "400":
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: API key is missing or invalid
        "403":
          description: Forbidden
        "404":
          description: Session not found
        "406":
          description: Not acceptable. Did you require application/json?
        "415":
          description: Unsupported media type. Did you provide application/json?
        "429":
          description: Too many request
        "500":
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
      security:
      - ApiKeyAuth: []
  /sessions:
    get:
      summary: Retrieve the pairing status with IO
      operationId: checkPairingStatus
      parameters:
      - name: RequestId
        in: header
        description: Request Id that will be logged by services
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: Version
        in: header
        description: Version of the required API
        required: false
        schema:
          maxLength: 64
          pattern: "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\\
            d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\\
            +([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          type: string
          example: 1.0.0-alpha-a.b-c-somethinglong+build.1-aef.1-its-okay
      - name: AcquirerId
        in: header
        description: Acquirer ID assigned by PagoPA
        required: true
        schema:
          $ref: '#/components/schemas/AcquirerId'
      - name: Channel
        in: header
        description: Channel originating the request
        required: true
        schema:
          $ref: '#/components/schemas/Channel'
      - name: MerchantId
        in: header
        description: Merchant ID. Mandatory when Channel equals POS.
        required: false
        schema:
          $ref: '#/components/schemas/MerchantId'
      - name: TerminalId
        in: header
        description: ID of the terminal originating the transaction. It must be unique
          per acquirer and channel.
        required: true
        schema:
          $ref: '#/components/schemas/TerminalId'
      - name: pairingToken
        in: query
        description: Pairing token
        required: true
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/PairingToken'
      responses:
        "200":
          description: Pairing completed
          headers:
            Location:
              description: URL to retrieve the session
              required: true
              style: simple
              explode: false
              schema:
                $ref: '#/components/schemas/URI'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSession'
        "400":
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Access token is missing or invalid
        "403":
          description: Forbidden
        "404":
          description: Session not found
        "406":
          description: Not acceptable. Did you require application/json?
        "429":
          description: Too many request
        "500":
          description: Server error
        default:
          description: Unexpected error
      security:
      - oAuth2:
        - checkPairingStatus
    post:
      summary: Create a session
      operationId: createSession
      parameters:
      - name: RequestId
        in: header
        description: Request Id that will be logged by services
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      - name: Version
        in: header
        description: Version of the required API
        required: false
        schema:
          maxLength: 64
          pattern: "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\\
            d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\\
            +([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          type: string
          example: 1.0.0-alpha-a.b-c-somethinglong+build.1-aef.1-its-okay
      - name: AcquirerId
        in: header
        description: Acquirer ID assigned by PagoPA
        required: true
        schema:
          $ref: '#/components/schemas/AcquirerId'
      - name: Channel
        in: header
        description: Channel originating the request
        required: true
        schema:
          $ref: '#/components/schemas/Channel'
      - name: MerchantId
        in: header
        description: Merchant ID. Mandatory when Channel equals POS.
        required: false
        schema:
          $ref: '#/components/schemas/MerchantId'
      - name: TerminalId
        in: header
        description: ID of the terminal originating the transaction. It must be unique
          per acquirer and channel.
        required: true
        schema:
          $ref: '#/components/schemas/TerminalId'
      requestBody:
        $ref: '#/components/requestBodies/CreateSession'
      responses:
        "201":
          description: Session created
          headers:
            Location:
              description: URL to retrieve the session
              required: true
              style: simple
              explode: false
              schema:
                $ref: '#/components/schemas/URI'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSession'
        "202":
          description: Pairing with IO is required
          headers:
            Location:
              description: URL to check the status of pairing
              required: true
              style: simple
              explode: false
              schema:
                $ref: '#/components/schemas/URI'
            Retry-After:
              description: Number of seconds after which to check if pairing has been
                completed
              required: true
              style: simple
              explode: false
              schema:
                $ref: '#/components/schemas/PositiveInteger'
            Max-Retries:
              description: Max number of retries to check if the pairing has been
                completed
              required: true
              style: simple
              explode: false
              schema:
                $ref: '#/components/schemas/PositiveInteger'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_202_1'
        "400":
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: Access token is missing or invalid
        "403":
          description: Forbidden
        "406":
          description: Not acceptable. Did you require application/json?
        "415":
          description: Unsupported media type. Did you provide application/json?
        "429":
          description: Too many request
        "500":
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
      security:
      - oAuth2:
        - createSession
  /pairings:
    post:
      tags:
      - internal
      summary: Pair the session with IO
      operationId: pair
      parameters:
      - name: Version
        in: header
        description: Version of the required API
        required: false
        schema:
          maxLength: 64
          pattern: "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\\
            d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\\
            +([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
          type: string
          example: 1.0.0-alpha-a.b-c-somethinglong+build.1-aef.1-its-okay
      requestBody:
        $ref: '#/components/requestBodies/Pair'
      responses:
        "204":
          description: Ack
        "400":
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        "401":
          description: API key is missing or invalid
        "403":
          description: Forbidden
        "406":
          description: Not acceptable. Did you require application/json?
        "415":
          description: Unsupported media type. Did you provide application/json?
        "429":
          description: Too many request
        "500":
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
      security:
      - ApiKeyAuth: []
components:
  schemas:
    Outcome:
      type: string
      description: Return codes
      example: OK
      enum:
      - OK
      - TERMS_AND_CONDITIONS_NOT_YET_ACCEPTED
    OutcomeForAccepted:
      type: string
      description: Return code for accepted request
      example: ACCEPTED
      enum:
      - ACCEPTED
    OutcomeForPairingWithIO:
      type: string
      description: Return code when pairing with IO is required
      example: PAIR_WITH_IO
      enum:
      - PAIR_WITH_IO
    PairingToken:
      pattern: "^\\d{6}$"
      type: string
      description: Pairing token to pair the session with IO
      example: "465937"
    GetSessionOk:
      required:
      - outcome
      - saveNewCards
      - taxCode
      type: object
      properties:
        outcome:
          $ref: '#/components/schemas/Outcome'
        taxCode:
          $ref: '#/components/schemas/TaxCode'
        saveNewCards:
          type: boolean
      description: Response returned when the session is found and T&C have been accepted
      example:
        outcome: OK
        taxCode: CHCZLN73D08A662B
        saveNewCards: true
    GetSessionTCNotAccepted:
      required:
      - outcome
      - taxCode
      type: object
      properties:
        outcome:
          $ref: '#/components/schemas/Outcome'
        taxCode:
          $ref: '#/components/schemas/TaxCode'
      description: Response returned when the session is found but T&Cs have not been
        accepted
      example:
        outcome: TERMS_AND_CONDITIONS_NOT_YET_ACCEPTED
        taxCode: CHCZLN73D08A662B
    CreateSessionByPanToken:
      required:
      - panToken
      type: object
      properties:
        panToken:
          $ref: '#/components/schemas/PanToken'
      description: Request to create a new session by PAN token
      example:
        panToken: 517a4216840E461fB011036A0fd134E1
    CreateSessionByTaxCode:
      required:
      - taxCode
      type: object
      properties:
        taxCode:
          $ref: '#/components/schemas/TaxCode'
      description: Request to create a new session by tax code
      example:
        taxCode: CHCZLN73D08A662B
    CreateSession:
      type: object
      description: Response to create session request
      discriminator:
        propertyName: outcome
        mapping:
          OK: '#/components/schemas/CreateSessionOk'
          TERMS_AND_CONDITIONS_NOT_YET_ACCEPTED: '#/components/schemas/CreateSessionTCNotAccepted'
      oneOf:
      - $ref: '#/components/schemas/CreateSessionOk'
      - $ref: '#/components/schemas/CreateSessionTCNotAccepted'
    CreateSessionOk:
      required:
      - outcome
      type: object
      properties:
        outcome:
          $ref: '#/components/schemas/Outcome'
        saveNewCards:
          type: boolean
      description: Response to create session request when all went ok
      example:
        outcome: OK
        saveNewCards: true
    CreateSessionTCNotAccepted:
      required:
      - outcome
      type: object
      properties:
        outcome:
          $ref: '#/components/schemas/Outcome'
      description: Response to create session request returned when T&Cs have not
        been accepted
      example:
        outcome: TERMS_AND_CONDITIONS_NOT_YET_ACCEPTED
    UUID:
      pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
      type: string
      description: UUID
      format: uuid
      example: d0d654e6-97da-4848-b568-99fedccb642b
    AcquirerId:
      pattern: "^\\d{1,11}$"
      type: string
      description: Acquirer ID assigned by PagoPA
      example: "4585625"
    Channel:
      type: string
      description: Channel originating the request
      example: ATM
      enum:
      - ATM
      - POS
      - TOTEM
      - CASH_REGISTER
      - CSA
    MerchantId:
      pattern: "^[0-9a-zA-Z]{1,15}$"
      type: string
      description: Merchant ID. Mandatory when Channel equals POS.
      example: 28405fHfk73x88D
    TerminalId:
      pattern: "^[0-9a-zA-Z]{1,8}$"
      type: string
      description: ID of the terminal originating the transaction. It must be unique
        per acquirer and channel.
      example: 0aB9wXyZ
    Errors:
      required:
      - errors
      type: object
      properties:
        errors:
          maxItems: 32
          type: array
          items:
            $ref: '#/components/schemas/Error'
      additionalProperties: false
      description: List of errors
      example:
        errors:
        - 00000000A
        - "001000001"
    Error:
      pattern: "^[A-F0-9]{9}$"
      type: string
      description: Error code
      example: "001000005"
    URI:
      pattern: "^[ -~]{1,2048}$"
      type: string
      description: URI
      format: uri
    PositiveInteger:
      minimum: 1
      type: integer
      description: Non negative integer
      example: 234
    TaxCode:
      pattern: "^([A-Z]{6}\\d{2}[A-Z]\\d{2}[A-Z]\\d{3}[A-Z])|(\\d{11})$"
      type: string
      description: Tax code of the payment card owner
      example: CHCZLN73D08A662B
    PanToken:
      pattern: "^[a-zA-Z0-9]{1,32}$"
      type: string
      description: The token of the PAN
      example: 517a4216840E461fB011036A0fd134E1
    inline_response_200:
      type: object
      discriminator:
        propertyName: outcome
        mapping:
          OK: '#/components/schemas/GetSessionOk'
          TERMS_AND_CONDITIONS_NOT_YET_ACCEPTED: '#/components/schemas/GetSessionTCNotAccepted'
      oneOf:
      - $ref: '#/components/schemas/GetSessionOk'
      - $ref: '#/components/schemas/GetSessionTCNotAccepted'
    inline_response_202:
      required:
      - outcome
      type: object
      properties:
        outcome:
          $ref: '#/components/schemas/OutcomeForAccepted'
      additionalProperties: false
      example:
        outcome: ACCEPTED
    inline_response_202_1:
      required:
      - outcome
      - pairingToken
      type: object
      properties:
        outcome:
          $ref: '#/components/schemas/OutcomeForPairingWithIO'
        pairingToken:
          $ref: '#/components/schemas/PairingToken'
      additionalProperties: false
      example:
        outcome: PAIR_WITH_IO
        pairingToken: "465937"
  responses:
    SessionRetrieved:
      description: Session retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_200'
    UpdateSessionReqAccepted:
      description: Response returned when the request to update a session has been
        accepted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_202'
    SessionCreated:
      description: Session created
      headers:
        Location:
          description: URL to retrieve the session
          required: true
          style: simple
          explode: false
          schema:
            $ref: '#/components/schemas/URI'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateSession'
    PairWithIORequired:
      description: Pairing with IO is required
      headers:
        Location:
          description: URL to check the status of pairing
          required: true
          style: simple
          explode: false
          schema:
            $ref: '#/components/schemas/URI'
        Retry-After:
          description: Number of seconds after which to check if pairing has been
            completed
          required: true
          style: simple
          explode: false
          schema:
            $ref: '#/components/schemas/PositiveInteger'
        Max-Retries:
          description: Max number of retries to check if the pairing has been completed
          required: true
          style: simple
          explode: false
          schema:
            $ref: '#/components/schemas/PositiveInteger'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_202_1'
    PairingCompleted:
      description: Pairing completed
      headers:
        Location:
          description: URL to retrieve the session
          required: true
          style: simple
          explode: false
          schema:
            $ref: '#/components/schemas/URI'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateSession'
    Error:
      description: Error response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
  parameters:
    RequestId:
      name: RequestId
      in: header
      description: Request Id that will be logged by services
      required: true
      schema:
        $ref: '#/components/schemas/UUID'
    Version:
      name: Version
      in: header
      description: Version of the required API
      required: false
      schema:
        maxLength: 64
        pattern: "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\\
          d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\\
          +([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
        type: string
        example: 1.0.0-alpha-a.b-c-somethinglong+build.1-aef.1-its-okay
    AcquirerId:
      name: AcquirerId
      in: header
      description: Acquirer ID assigned by PagoPA
      required: true
      schema:
        $ref: '#/components/schemas/AcquirerId'
    Channel:
      name: Channel
      in: header
      description: Channel originating the request
      required: true
      schema:
        $ref: '#/components/schemas/Channel'
    MerchantId:
      name: MerchantId
      in: header
      description: Merchant ID. Mandatory when Channel equals POS.
      required: false
      schema:
        $ref: '#/components/schemas/MerchantId'
    TerminalId:
      name: TerminalId
      in: header
      description: ID of the terminal originating the transaction. It must be unique
        per acquirer and channel.
      required: true
      schema:
        $ref: '#/components/schemas/TerminalId'
  requestBodies:
    UpdateSession:
      description: Request to update partially a session
      content:
        application/json:
          schema:
            required:
            - saveNewCards
            - termsAndCondsAccepted
            type: object
            properties:
              termsAndCondsAccepted:
                type: boolean
              saveNewCards:
                type: boolean
            additionalProperties: false
            example:
              termsAndCondsAccepted: true
              saveNewCards: false
    CreateSession:
      description: Request to create a new session
      content:
        application/json:
          schema:
            oneOf:
            - $ref: '#/components/schemas/CreateSessionByPanToken'
            - $ref: '#/components/schemas/CreateSessionByTaxCode'
    Pair:
      description: Pairing request from IO
      content:
        application/json:
          schema:
            required:
            - pairingToken
            - taxCode
            type: object
            properties:
              pairingToken:
                $ref: '#/components/schemas/PairingToken'
              taxCode:
                $ref: '#/components/schemas/TaxCode'
            additionalProperties: false
            example:
              pairingToken: "465937"
              taxCode: CHCZLN73D08A662B
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      description: This API uses API key when it is invoked by a server application
      name: Ocp-Apim-Subscription-Key
      in: header
    oAuth2:
      type: oauth2
      description: This API uses OAuth2
      flows:
        password:
          tokenUrl: ../mil-idp/pwd/token
          scopes:
            verifyByQrCode: Verify a payment notice by QR-code
            activateByQrCode: Activate the payment of a notice by QR-code
            verifyByTaxCodeAndNoticeNumber: Verify a payment notice by PA tax code
              and notice number
            activateByTaxCodeAndNoticeNumber: Activate the payment of a notice by
              PA tax code and notice number
            preConfirmOrAbort: Pre-confirm or abort the payment of a set of notices
            confirm: Confirm the payment of a set of notices
            getPaymentStatus: Retrieve the status of the payment of a set of payment
              notices
            getLastTransactions: Get last 30 transactions executed by the client in
              the last 30 days
            getFee: Calculate the fee amount for a set of payment notices
            getServices: Return the list of services available for end-users
            deleteSessionById: Delete a session by ID
            createSession: Create a session
            checkPairingStatus: Retrieve the pairing status with IO
            accept: Store the acceptance of T&C for the user identified by the tax
              code stored in the session
            presaveExplicit: Pre-save the payment card in the internal Wallet
        clientCredentials:
          tokenUrl: ../mil-ipd/clt/token
          scopes:
            verifyByQrCode: Verify a payment notice by QR-code
            activateByQrCode: Activate the payment of a notice by QR-code
            verifyByTaxCodeAndNoticeNumber: Verify a payment notice by PA tax code
              and notice number
            activateByTaxCodeAndNoticeNumber: Activate the payment of a notice by
              PA tax code and notice number
            close: Close the payment of a set of notices
            getPaymentStatus: Retrieve the status of the payment of a set of payment
              notices
            getFee: Calculate the fee amount for a set of payment notices
            getServices: Return the list of services available for end-users
            deleteSessionById: Delete a session by ID
            createSession: Create a session
            checkPairingStatus: Retrieve the pairing status with IO
            accept: Store the acceptance of T&C for the user identified by the tax
              code stored in the session
            presaveExplicit: Pre-save the payment card in the internal Wallet
