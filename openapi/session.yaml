openapi: 3.0.3

info:
  title: Session Microservice
  version: 4.0.0
  description: Session Microservice for Multi-channel Integration Layer of SW Client Project
  contact:
    name: Antonio Tarricone
    email: antonio.tarricone@pagopa.it

servers:
  - description: Session Manager URL
    url: https://server_addr

security:
  - ApiKeyAuth: [ ]

paths:
  /sessions/{id}:
    parameters:
      - $ref: 'common.yaml#/components/parameters/RequestId'
      - $ref: 'common.yaml#/components/parameters/Version'
      - $ref: 'common.yaml#/components/parameters/AcquirerId'
      - $ref: 'common.yaml#/components/parameters/Channel'
      - $ref: 'common.yaml#/components/parameters/TerminalId'
      - name: id
        description: Session ID
        in: path
        required: true
        schema:
          $ref: 'common.yaml#/components/schemas/UUID'

    # ------------------------------------------------------
    # Read session by ID
    # ------------------------------------------------------
    get:
      operationId: getSessionById
      summary: Read a session by ID
      responses:
        "200":
          $ref: '#/components/responses/SessionRetrieved'
        "400":
          $ref: 'common.yaml#/components/responses/Error'
        "401":
          description: API key is missing or invalid
        "403":
          description: Forbidden
        "404":
          description: Session not found
        "406":
          description: Not acceptable. Did you require application/json?
        "429":
          description: Too many request
        "500":
          $ref: 'common.yaml#/components/responses/Error'
        default:
          description: Unexpected error

    # ------------------------------------------------------
    # Delete session by ID
    # ------------------------------------------------------
    delete:
      operationId: deleteSessionById
      summary: Delete a session by ID
      responses:
        "204":
          description: Session deleted
        "400":
          $ref: 'common.yaml#/components/responses/Error'
        "401":
          description: API key is missing or invalid
        "403":
          description: Forbidden
        "404":
          description: Session not found
        "406":
          description: Not acceptable. Did you require application/json?
        "429":
          description: Too many request
        "500":
          $ref: 'common.yaml#/components/responses/Error'
        default:
          description: Unexpected error

    # ------------------------------------------------------
    # Update partially session by ID
    # ------------------------------------------------------
    patch:
      operationId: updateSessionById
      summary: Update partially a session by ID
      requestBody:
        $ref: '#/components/requestBodies/UpdateSession'
      responses:
        "202":
          $ref: '#/components/responses/UpdateSessionReqAccepted'
        "400":
          $ref: 'common.yaml#/components/responses/Error'
        "401":
          description: API key is missing or invalid
        "403":
          description: Forbidden
        "404":
          description: Session not found
        "406":
          description: Not acceptable. Did you require application/json?
        "415":
          description: Unsupported media type. Did you provide application/json?
        "429":
          description: Too many request
        "500":
          $ref: 'common.yaml#/components/responses/Error'
        default:
          description: Unexpected error

  /sessions:
    parameters:
      - $ref: 'common.yaml#/components/parameters/RequestId'
      - $ref: 'common.yaml#/components/parameters/Version'
      - $ref: 'common.yaml#/components/parameters/AcquirerId'
      - $ref: 'common.yaml#/components/parameters/Channel'
      - $ref: 'common.yaml#/components/parameters/TerminalId'

    # ------------------------------------------------------
    # Create a session
    # ------------------------------------------------------
    post:
      operationId: createSession
      summary: Create a session
      requestBody:
        $ref: '#/components/requestBodies/CreateSession'
      responses:
        "201":
          $ref: '#/components/responses/SessionCreated'
        "202":
          $ref: '#/components/responses/PairWithIORequired'
        "400":
          $ref: 'common.yaml#/components/responses/Error'
        "401":
          description: API key is missing or invalid
        "403":
          description: Forbidden
        "406":
          description: Not acceptable. Did you require application/json?
        "415":
          description: Unsupported media type. Did you provide application/json?
        "429":
          description: Too many request
        "500":
          $ref: 'common.yaml#/components/responses/Error'
        default:
          description: Unexpected error

    # ------------------------------------------------------
    # Check pairing status
    # ------------------------------------------------------
    get:
      operationId: checkPairingStatus
      summary: Retrieve the pairing status with IO
      parameters:
        - name: pairingToken
          in: query
          description: Pairing token
          required: true
          schema:
            $ref: '#/components/schemas/PairingToken'
      responses:
        "200":
          $ref: '#/components/responses/PairingCompleted'
        "400":
          $ref: 'common.yaml#/components/responses/Error'
        "401":
          description: API key is missing or invalid
        "403":
          description: Forbidden
        "404":
          description: Session not found
        "406":
          description: Not acceptable. Did you require application/json?
        "429":
          description: Too many request
        "500":
          description: Server error
        default:
          description: Unexpected error

  /pairings:
    # ------------------------------------------------------
    # Pair
    # ------------------------------------------------------
    post:
      operationId: pair
      summary: Pair the session with IO
      parameters:
        - $ref: 'common.yaml#/components/parameters/Version'
        - $ref: 'common.yaml#/components/parameters/Version'
      requestBody:
        $ref: '#/components/requestBodies/Pair'
      responses:
        "204":
          description: Ack
        "400":
          $ref: 'common.yaml#/components/responses/Error'
        "401":
          description: API key is missing or invalid
        "403":
          description: Forbidden
        "406":
          description: Not acceptable. Did you require application/json?
        "415":
          description: Unsupported media type. Did you provide application/json?
        "429":
          description: Too many request
        "500":
          $ref: 'common.yaml#/components/responses/Error'
        default:
          description: Unexpected error

components:
  # ========================================================
  # Schemas
  # ========================================================
  schemas:
    # ------------------------------------------------------
    # Basic types
    # ------------------------------------------------------
    Outcome:
      description: Return codes
      enum:
        - OK
        - TERMS_AND_CONDITIONS_NOT_YET_ACCEPTED
      type: string
      example: "OK"

    OutcomeForAccepted:
      description: Return code for accepted request
      enum:
        - ACCEPTED
      type: string
      example: "ACCEPTED"

    OutcomeForPairingWithIO:
      description: Return code when pairing with IO is required
      enum:
        - PAIR_WITH_IO
      type: string
      example: "PAIR_WITH_IO"

    PairingToken:
      description: Pairing token to pair the session with IO
      type: string
      pattern: "^\\d{6}$"
      example: "465937"

    # ------------------------------------------------------
    # For getSessionById
    # ------------------------------------------------------
    GetSessionOk:
      description: Response returned when the session is found and T&C have been accepted
      type: object
      properties:
        outcome:
          $ref: '#/components/schemas/Outcome'
        taxCode:
          $ref: 'common.yaml#/components/schemas/TaxCode'
        saveNewCards:
          type: boolean
      required:
        - outcome
        - taxCode
        - saveNewCards
      example:
        outcome: "OK"
        taxCode: "CHCZLN73D08A662B"
        saveNewCards: true

    GetSessionTCNotAccepted:
      description: Response returned when the session is found but T&Cs have not been accepted
      type: object
      properties:
        outcome:
          $ref: '#/components/schemas/Outcome'
        taxCode:
          $ref: 'common.yaml#/components/schemas/TaxCode'
      required:
        - outcome
        - taxCode
      example:
        outcome: "TERMS_AND_CONDITIONS_NOT_YET_ACCEPTED"
        taxCode: "CHCZLN73D08A662B"

    # ------------------------------------------------------
    # For createSession
    # ------------------------------------------------------
    CreateSessionByPanToken:
      description: Request to create a new session by PAN token
      type: object
      properties:
        panToken:
          $ref: 'common.yaml#/components/schemas/PanToken'
      required:
        - panToken
      example:
        panToken: "517a4216840E461fB011036A0fd134E1"

    CreateSessionByTaxCode:
      description: Request to create a new session by tax code
      type: object
      properties:
        taxCode:
          $ref: 'common.yaml#/components/schemas/TaxCode'
      required:
        - taxCode
      example:
        taxCode: "CHCZLN73D08A662B"

    CreateSession:
      description: Response to create session request
      type: object
      oneOf:
        - $ref: '#/components/schemas/CreateSessionOk'
        - $ref: '#/components/schemas/CreateSessionTCNotAccepted'
      discriminator:
        propertyName: outcome
        mapping:
          OK: '#/components/schemas/CreateSessionOk'
          TERMS_AND_CONDITIONS_NOT_YET_ACCEPTED: '#/components/schemas/CreateSessionTCNotAccepted'

    CreateSessionOk:
      description: Response to create session request when all went ok
      type: object
      properties:
        outcome:
          $ref: '#/components/schemas/Outcome'
        saveNewCards:
          type: boolean
      required:
        - outcome
      example:
        outcome: "OK"
        saveNewCards: true

    CreateSessionTCNotAccepted:
      description: Response to create session request returned when T&Cs have not been accepted
      type: object
      properties:
        outcome:
          $ref: '#/components/schemas/Outcome'
      required:
        - outcome
      example:
        outcome: "TERMS_AND_CONDITIONS_NOT_YET_ACCEPTED"

  # ========================================================
  # Request bodies
  # ========================================================
  requestBodies:
    # ------------------------------------------------------
    # For updateSessionById
    # ------------------------------------------------------
    UpdateSession:
      description: Request to update partially a session
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              termsAndCondsAccepted:
                type: boolean
              saveNewCards:
                type: boolean
            required:
              - termsAndCondsAccepted
              - saveNewCards
            example:
              termsAndCondsAccepted: true
              saveNewCards: false

    # ------------------------------------------------------
    # For createSession
    # ------------------------------------------------------
    CreateSession:
      description: Request to create a new session
      content:
        application/json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/CreateSessionByPanToken'
              - $ref: '#/components/schemas/CreateSessionByTaxCode'

    # ------------------------------------------------------
    # For pair
    # ------------------------------------------------------
    Pair:
      description: Pairing request from IO
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              pairingToken:
                $ref: '#/components/schemas/PairingToken'
              taxCode:
                $ref: 'common.yaml#/components/schemas/TaxCode'
            required:
              - pairingToken
              - taxCode
            example:
              pairingToken: "465937"
              taxCode: "CHCZLN73D08A662B"

  # ========================================================
  # Responses
  # ========================================================
  responses:
    # ------------------------------------------------------
    # For getSessionById
    # ------------------------------------------------------
    SessionRetrieved:
      description: Session retrieved
      content:
        application/json:
          schema:
            type: object
            oneOf:
              - $ref: '#/components/schemas/GetSessionOk'
              - $ref: '#/components/schemas/GetSessionTCNotAccepted'
            discriminator:
              propertyName: outcome
              mapping:
                OK: '#/components/schemas/GetSessionOk'
                TERMS_AND_CONDITIONS_NOT_YET_ACCEPTED: '#/components/schemas/GetSessionTCNotAccepted'

    # ------------------------------------------------------
    # For updateSessionById
    # ------------------------------------------------------
    UpdateSessionReqAccepted:
      description: Response returned when the request to update a session has been accepted
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              outcome:
                $ref: '#/components/schemas/OutcomeForAccepted'
            required:
              - outcome
            example:
              outcome: "ACCEPTED"

    # ------------------------------------------------------
    # For createSession
    # ------------------------------------------------------
    SessionCreated:
      description: Session created
      headers:
        Location:
          description: URL to retrieve the session
          required: true
          schema:
            $ref: 'common.yaml#/components/schemas/URI'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateSession'

    PairWithIORequired:
      description: Pairing with IO is required
      headers:
        Location:
          description: URL to check the status of pairing
          required: true
          schema:
            $ref: 'common.yaml#/components/schemas/URI'
        Retry-After:
          description: Number of seconds after which to check if pairing has been completed
          required: true
          schema:
            $ref: 'common.yaml#/components/schemas/PositiveInteger'
        Max-Retries:
          description: Max number of retries to check if the pairing has been completed
          required: true
          schema:
            $ref: 'common.yaml#/components/schemas/PositiveInteger'
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              outcome:
                $ref: '#/components/schemas/OutcomeForPairingWithIO'
              pairingToken:
                $ref: '#/components/schemas/PairingToken'
            required:
              - outcome
              - pairingToken
            example:
              outcome: "PAIR_WITH_IO"
              pairingToken: "465937"

    # ------------------------------------------------------
    # For checkPairingStatus
    # ------------------------------------------------------
    PairingCompleted:
      description: Pairing completed
      headers:
        Location:
          description: URL to retrieve the session
          required: true
          schema:
            $ref: 'common.yaml#/components/schemas/URI'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateSession'

  # ========================================================
  # Security schemes
  # ========================================================
  securitySchemes:
    ApiKeyAuth:
      $ref: 'common.yaml#/components/securitySchemes/ApiKeyAuth'